/// <reference types="node" />
import { EventEmitter } from "events";
import CommandExecuter from "./command_executer";
declare class VideoTrack {
    type: string;
    path: string;
    constructor({ path }: {
        path: any;
    });
}
declare class VideoSequence {
    type: string;
    path: string;
    constructor({ path }: {
        path: any;
    });
}
declare class AudioTrack {
    type: string;
    path: string;
    constructor({ path }: {
        path: any;
    });
}
declare class AudioSequence {
    type: string;
    path: string;
    constructor({ path }: {
        path: any;
    });
}
declare class VideoMuxer extends EventEmitter {
    outputPathName: string;
    outputPathExt: string;
    outputPath: string;
    videoTracks: VideoTrack[];
    audioTracks: AudioTrack[];
    videoSequences: VideoSequence[];
    audioSequences: AudioSequence[];
    commandExecuter: CommandExecuter;
    constructor(outputPath: any);
    addVideoTracks(...tracks: VideoTrack[]): void;
    addAudioTracks(...tracks: AudioTrack[]): void;
    addVideoSequences(...sequences: VideoSequence[]): void;
    addAudioSequences(...sequences: AudioSequence[]): void;
    run(): Promise<void>;
}
export { VideoTrack, AudioTrack, VideoSequence, AudioSequence, VideoMuxer };
