"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
function mergeFiles(fileList = [], output = "./output.ts") {
    const cliProgress = require("cli-progress");
    return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
        if (fileList.length === 0) {
            resolve();
        }
        const writeStream = fs.createWriteStream(output);
        const lastIndex = fileList.length - 1;
        const bar = new cliProgress.SingleBar({
            format: "[合并文件] [{bar}] {percentage}% | ETA: {eta}s | {value}/{total}",
        }, cliProgress.Presets.shades_classic);
        bar.start(fileList.length, 0);
        let i = 0;
        let writable = true;
        write();
        function write() {
            writable = true;
            while (i <= lastIndex && writable) {
                writable = writeStream.write(fs.readFileSync(fileList[i]), () => {
                    if (i > lastIndex) {
                        bar.update(i);
                        bar.stop();
                        writeStream.end();
                        resolve();
                    }
                });
                bar.update(i);
                i++;
            }
            if (i <= lastIndex) {
                writeStream.once("drain", () => {
                    write();
                });
            }
        }
    }));
}
exports.default = mergeFiles;
//# sourceMappingURL=merge_files.js.map