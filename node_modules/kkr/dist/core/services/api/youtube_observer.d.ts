/// <reference types="node" />
import { EventEmitter } from "events";
export declare class NetworkError extends Error {
}
export interface ConnectResult {
    mpdUrl: string;
    title: string;
    isLowLatencyLiveStream: boolean;
    latencyClass: string;
    isLiveDvrEnabled: boolean;
    isPremiumVideo: boolean;
}
export interface YouTubeObserverParams {
    videoUrl: string;
    format: string;
}
declare class YouTubeObserver extends EventEmitter {
    videoUrl: string;
    mpdUrl: string;
    format: string;
    playlistFetchInterval: number;
    playlistFetchTimer: NodeJS.Timeout;
    mpdUrlFetchTimer: NodeJS.Timeout;
    audioUrlFlags: boolean[];
    videoUrlFlags: boolean[];
    constructor({ videoUrl, format }: YouTubeObserverParams);
    connect(): Promise<ConnectResult>;
    disconnect(): Promise<void>;
    cycling(): Promise<void>;
    getVideoChunks(): Promise<void>;
}
export default YouTubeObserver;
